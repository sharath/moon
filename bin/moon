#!/usr/bin/env python3
from lambo import LamboClient
from moon import Predictor, Sanitizer

if __name__ == '__main__':
    # check if credential file exists else ask user for info
    try:
        credential = open('credential', 'r')
    except IOError:
        LAMBO_USER = input('LAMBO_USER: ').strip()
        LAMBO_PASS = input('LAMBO_PASS: ').strip()
        store = input('Store in \'credential\'? (y/N) ')
        if store == 'y':
            credential = open('credential', 'w')
            t = [LAMBO_USER, LAMBO_PASS]
            credential.write(':'.join(t))
    else:
        LAMBO_USER, LAMBO_PASS = credential.read().strip('\n').split(':')
    client = LamboClient(username=LAMBO_USER, password=LAMBO_PASS)
    client.login()
    t = client.data('Ethereum')
    t = sorted(t, key=lambda k: int(k['last_updated']))
    x = []
    y = []
    for i in range(len(t)):
        t[i]['last_updated'] = i + 1
        x.append(t[i]['last_updated'])
        y.append(t[i]['price_usd'])
    x, y = Sanitizer(x, y).sanitize()
    p = Predictor(x, y)
    next =  p.lagrange_interpolate(len(t))
    print(y[len(t)-1])
    print(next)